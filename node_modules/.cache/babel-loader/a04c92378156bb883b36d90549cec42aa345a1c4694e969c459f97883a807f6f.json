{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bytive_ToDoList\\\\ToDoListApp\\\\src\\\\components\\\\TaskItem.jsx\";\n// src/components/TaskItem.jsx\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: task.completed ? 'status-completed' : 'status-pending',\n        children: task.completed ? 'Completed' : 'Pending'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${task.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","TaskItem","task","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","style","display","justifyContent","alignItems","className","completed","to","id","_c","$RefreshReg$"],"sources":["D:/Bytive_ToDoList/ToDoListApp/src/components/TaskItem.jsx"],"sourcesContent":["// src/components/TaskItem.jsx\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TaskItem = ({ task }) => {\r\n  return (\r\n    <li>\r\n      <h3>{task.title}</h3>\r\n      <p>{task.description}</p>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <span className={task.completed ? 'status-completed' : 'status-pending'}>\r\n          {task.completed ? 'Completed' : 'Pending'}\r\n        </span>\r\n        <Link to={`/edit/${task.id}`}>\r\n          <button className=\"edit-button\">Edit</button>\r\n        </Link>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAKD,IAAI,CAACE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBR,OAAA;MAAAG,QAAA,EAAID,IAAI,CAACO;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBR,OAAA;MAAKU,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAV,QAAA,gBACrFH,OAAA;QAAMc,SAAS,EAAEZ,IAAI,CAACa,SAAS,GAAG,kBAAkB,GAAG,gBAAiB;QAAAZ,QAAA,EACrED,IAAI,CAACa,SAAS,GAAG,WAAW,GAAG;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACPR,OAAA,CAACF,IAAI;QAACkB,EAAE,EAAE,SAASd,IAAI,CAACe,EAAE,EAAG;QAAAd,QAAA,eAC3BH,OAAA;UAAQc,SAAS,EAAC,aAAa;UAAAX,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET,CAAC;AAACU,EAAA,GAfIjB,QAAQ;AAiBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}