{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bytive_ToDoList\\\\ToDoListApp\\\\src\\\\components\\\\EditTaskPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateTask } from \"./features/tasksSlice\"; // Action for updating task\nimport { useHistory, useParams } from \"react-router-dom\"; // For navigating back\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTaskPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get task id from URL\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const task = useSelector(state => state.tasks.find(task => task.id === parseInt(id))); // Find the task by ID\n\n  const [title, setTitle] = useState((task === null || task === void 0 ? void 0 : task.title) || \"\");\n  const [description, setDescription] = useState((task === null || task === void 0 ? void 0 : task.description) || \"\");\n  const [completed, setCompleted] = useState((task === null || task === void 0 ? void 0 : task.completed) || false);\n  useEffect(() => {\n    if (!task) {\n      history.push(\"/\"); // If task not found, navigate to home page\n    }\n  }, [task, history]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateTask({\n      id: task.id,\n      updates: {\n        title,\n        description,\n        completed\n      }\n    }));\n    history.push(\"/\"); // Redirect to home page after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: completed,\n          onChange: () => setCompleted(!completed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \"Completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTaskPage, \"YobzOseEDAjHgBXBnGmH/G4wyV4=\", false, function () {\n  return [useParams, useDispatch, useHistory, useSelector];\n});\n_c = EditTaskPage;\nexport default EditTaskPage;\nvar _c;\n$RefreshReg$(_c, \"EditTaskPage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","updateTask","useHistory","useParams","jsxDEV","_jsxDEV","EditTaskPage","_s","id","dispatch","history","task","state","tasks","find","parseInt","title","setTitle","description","setDescription","completed","setCompleted","push","handleSubmit","e","preventDefault","updates","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","checked","_c","$RefreshReg$"],"sources":["D:/Bytive_ToDoList/ToDoListApp/src/components/EditTaskPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateTask } from \"./features/tasksSlice\";  // Action for updating task\r\nimport { useHistory, useParams } from \"react-router-dom\";  // For navigating back\r\n\r\nfunction EditTaskPage() {\r\n  const { id } = useParams();  // Get task id from URL\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const task = useSelector((state) =>\r\n    state.tasks.find((task) => task.id === parseInt(id))\r\n  );  // Find the task by ID\r\n\r\n  const [title, setTitle] = useState(task?.title || \"\");\r\n  const [description, setDescription] = useState(task?.description || \"\");\r\n  const [completed, setCompleted] = useState(task?.completed || false);\r\n\r\n  useEffect(() => {\r\n    if (!task) {\r\n      history.push(\"/\");  // If task not found, navigate to home page\r\n    }\r\n  }, [task, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateTask({ id: task.id, updates: { title, description, completed } }));\r\n    history.push(\"/\");  // Redirect to home page after saving\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Task</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <label>Description</label>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={() => setCompleted(!completed)}\r\n          />\r\n          Completed\r\n        </label>\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTaskPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,uBAAuB,CAAC,CAAE;AACrD,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAE;EAC7B,MAAMM,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,OAAO,GAAGR,UAAU,CAAC,CAAC;EAC5B,MAAMS,IAAI,GAAGX,WAAW,CAAEY,KAAK,IAC7BA,KAAK,CAACC,KAAK,CAACC,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKO,QAAQ,CAACP,EAAE,CAAC,CACrD,CAAC,CAAC,CAAE;;EAEJ,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAAa,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,KAAK,KAAI,EAAE,CAAC;EACrD,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAAa,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,WAAW,KAAI,EAAE,CAAC;EACvE,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,CAAAa,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,SAAS,KAAI,KAAK,CAAC;EAEpEvB,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,IAAI,EAAE;MACTD,OAAO,CAACY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE;IACtB;EACF,CAAC,EAAE,CAACX,IAAI,EAAED,OAAO,CAAC,CAAC;EAEnB,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBhB,QAAQ,CAACR,UAAU,CAAC;MAAEO,EAAE,EAAEG,IAAI,CAACH,EAAE;MAAEkB,OAAO,EAAE;QAAEV,KAAK;QAAEE,WAAW;QAAEE;MAAU;IAAE,CAAC,CAAC,CAAC;IACjFV,OAAO,CAACY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE;EACtB,CAAC;EAED,oBACEjB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1B,OAAA;MAAM2B,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3BtB,OAAA;QAAAsB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB1B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAElB,KAAM;QACbmB,QAAQ,EAAGX,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF1B,OAAA;QAAAsB,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1B1B,OAAA;QACE6B,KAAK,EAAEhB,WAAY;QACnBiB,QAAQ,EAAGX,CAAC,IAAKL,cAAc,CAACK,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAChDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF1B,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UACE4B,IAAI,EAAC,UAAU;UACfK,OAAO,EAAElB,SAAU;UACnBe,QAAQ,EAAEA,CAAA,KAAMd,YAAY,CAAC,CAACD,SAAS;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,aAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxB,EAAA,CArDQD,YAAY;EAAA,QACJH,SAAS,EACPJ,WAAW,EACZG,UAAU,EACbF,WAAW;AAAA;AAAAuC,EAAA,GAJjBjC,YAAY;AAuDrB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}